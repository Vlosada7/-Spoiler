{"version":3,"sources":["../../src/testUtils/index.ts","../../src/testUtils/testUtils.ts","../../../../node_modules/js-cookie/dist/js.cookie.mjs","../../src/utils/mimeTypeExtensions.ts","../../src/utils/noop.ts","../../src/utils/string.ts","../../src/utils/object.ts"],"sourcesContent":["export * from './testUtils';\n","import '@testing-library/jest-dom/extend-expect';\n\nimport type { RenderOptions } from '@testing-library/react';\nimport { render } from '@testing-library/react';\n\nimport { noop } from '../utils';\n\n// Wrap components with test providers\nconst customRender = (ui: React.ReactElement, options?: RenderOptions) => {\n  return render(ui, options);\n};\n\n// Re-export everything\nexport * from '@testing-library/react';\nexport { default as userEvent } from '@testing-library/user-event';\n\n// Override render method\nexport { customRender as render, noop };\n","/*! js-cookie v3.0.1 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (key, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    key = encodeURIComponent(key)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      key + '=' + converter.write(value, key) + stringifiedAttributes)\n  }\n\n  function get (key) {\n    if (typeof document === 'undefined' || (arguments.length && !key)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var foundKey = decodeURIComponent(parts[0]);\n        jar[foundKey] = converter.read(value, foundKey);\n\n        if (key === foundKey) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return key ? jar[key] : jar\n  }\n\n  return Object.create(\n    {\n      set: set,\n      get: get,\n      remove: function (key, attributes) {\n        set(\n          key,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport default api;\n","const MimeTypeToExtensionMap = Object.freeze({\n  'image/png': 'png',\n  'image/jpeg': 'jpg',\n  'image/gif': 'gif',\n  'image/webp': 'webp',\n  'image/x-icon': 'ico',\n  'image/vnd.microsoft.icon': 'ico',\n} as const);\n\nexport type SupportedMimeType = keyof typeof MimeTypeToExtensionMap;\n\nexport const extension = (mimeType: SupportedMimeType): string => {\n  return MimeTypeToExtensionMap[mimeType];\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-function */\nexport const noop = (..._args: any[]): void => {};\n","const IP_V4_ADDRESS_REGEX =\n  /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n\nexport function isIPV4Address(str: string | undefined | null): boolean {\n  return IP_V4_ADDRESS_REGEX.test(str || '');\n}\n\nexport function titleize(str: string | undefined | null): string {\n  const s = str || '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\n\nexport function snakeToCamel(str: string | undefined): string {\n  return str ? str.replace(/([-_][a-z])/g, match => match.toUpperCase().replace(/-|_/, '')) : '';\n}\n\nexport function camelToSnake(str: string | undefined): string {\n  return str ? str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`) : '';\n}\n","import { camelToSnake, snakeToCamel } from './string';\n\nconst createDeepObjectTransformer = (transform: any) => {\n  const deepTransform = (obj: any): any => {\n    if (!obj) {\n      return obj;\n    }\n\n    if (Array.isArray(obj)) {\n      return obj.map(el => {\n        if (typeof el === 'object' || Array.isArray(el)) {\n          return deepTransform(el);\n        }\n        return el;\n      });\n    }\n\n    const copy = { ...obj };\n    const keys = Object.keys(copy);\n    for (const oldName of keys) {\n      const newName = transform(oldName.toString());\n      if (newName !== oldName) {\n        copy[newName] = copy[oldName];\n        delete copy[oldName];\n      }\n      if (typeof copy[newName] === 'object') {\n        copy[newName] = deepTransform(copy[newName]);\n      }\n    }\n    return copy;\n  };\n\n  return deepTransform;\n};\n\n/**\n * Transforms camelCased objects/ arrays to snake_cased.\n * This function recursively traverses all objects and arrays of the passed value\n * camelCased keys are removed.\n */\nexport const deepCamelToSnake = createDeepObjectTransformer(camelToSnake);\n\n/**\n * Transforms snake_cased objects/ arrays to camelCased.\n * This function recursively traverses all objects and arrays of the passed value\n * camelCased keys are removed.\n */\nexport const deepSnakeToCamel = createDeepObjectTransformer(snakeToCamel);\n"],"mappings":"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","names":["testUtils_exports","__export","noop","customRender","__toCommonJS","testUtils_exports","__export","noop","customRender","import_extend_expect","import_react","assign","target","i","source","key","defaultConverter","value","init","converter","defaultAttributes","set","attributes","stringifiedAttributes","attributeName","get","cookies","jar","parts","foundKey","api","MimeTypeToExtensionMap","noop","_args","snakeToCamel","str","match","camelToSnake","letter","createDeepObjectTransformer","transform","deepTransform","obj","el","copy","keys","oldName","newName","deepCamelToSnake","camelToSnake","deepSnakeToCamel","snakeToCamel","__reExport","testUtils_exports","import_user_event","customRender","ui","options","__reExport","testUtils_exports"]}